$#include "Audio/Audio.h"

static const String SOUND_MASTER;
static const String SOUND_EFFECT;
static const String SOUND_AMBIENT;
static const String SOUND_VOICE;
static const String SOUND_MUSIC;

class Audio : public Object
{
    bool SetMode(int bufferLengthMSec, int mixRate, bool stereo, bool interpolation = true);
    bool Play();
    void Stop();
    void SetMasterGain(const String type, float gain);
    void PauseSoundType(const String type);
    void ResumeSoundType(const String type);
    void ResumeAll();
    void SetListener(SoundListener* listener);
    void StopSound(Sound* sound);

    unsigned GetSampleSize() const;
    int GetMixRate() const;
    bool GetInterpolation() const;
    bool IsStereo() const;
    bool IsPlaying() const;
    bool IsInitialized() const;
    bool HasMasterGain(const String type) const;
    float GetMasterGain(const String type) const;
    bool IsSoundTypePaused(const String type) const;
    SoundListener* GetListener() const;
    const PODVector<SoundSource*>& GetSoundSources() const;

    void AddSoundSource(SoundSource* soundSource);
    void RemoveSoundSource(SoundSource* soundSource);

    void MixOutput(void *dest, unsigned samples);

    tolua_readonly tolua_property__get_set unsigned sampleSize;
    tolua_readonly tolua_property__get_set int mixRate;
    tolua_readonly tolua_property__get_set bool interpolation;
    tolua_readonly tolua_property__is_set bool stereo;
    tolua_readonly tolua_property__is_set bool playing;
    tolua_readonly tolua_property__is_set bool initialized;
    tolua_property__get_set SoundListener* listener;
};

Audio* GetAudio();
tolua_readonly tolua_property__get_set Audio* audio;

${
#define TOLUA_DISABLE_tolua_AudioLuaAPI_GetAudio00
static int tolua_AudioLuaAPI_GetAudio00(lua_State* tolua_S)
{
    return ToluaGetSubsystem<Audio>(tolua_S);
}

#define TOLUA_DISABLE_tolua_get_audio_ptr
#define tolua_get_audio_ptr tolua_AudioLuaAPI_GetAudio00
$}