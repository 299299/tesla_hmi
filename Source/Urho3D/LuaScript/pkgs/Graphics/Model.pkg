$#include "Graphics/Model.h"

class Model : public ResourceWithMetadata
{
    Model();
    ~Model();

    // SharedPtr<Model> Clone(const String cloneName = String::EMPTY) const;
    tolua_outside Model* ModelClone @ Clone(const String cloneName = String::EMPTY) const;

    void SetBoundingBox(const BoundingBox& box);
    bool SetVertexBuffers(const Vector<SharedPtr<VertexBuffer> >& buffers, const PODVector<unsigned>& morphRangeStarts,
        const PODVector<unsigned>& morphRangeCounts);
    bool SetIndexBuffers(const Vector<SharedPtr<IndexBuffer> >& buffers);
    void SetNumGeometries(unsigned num);
    bool SetNumGeometryLodLevels(unsigned index, unsigned num);
    bool SetGeometry(unsigned index, unsigned lodLevel, Geometry* geometry);
    bool SetGeometryCenter(unsigned index, const Vector3& center);
    const BoundingBox& GetBoundingBox() const;
    Skeleton& GetSkeleton();
    unsigned GetNumGeometries() const;
    unsigned GetNumGeometryLodLevels(unsigned index) const;
    Geometry* GetGeometry(unsigned index, unsigned lodLevel) const;
    const Vector3& GetGeometryCenter(unsigned index) const;
    unsigned GetNumMorphs() const;
    const ModelMorph* GetMorph(const String name) const;
    const ModelMorph* GetMorph(StringHash nameHash) const;
    const ModelMorph* GetMorph(unsigned index) const;
    unsigned GetMorphRangeStart(unsigned bufferIndex) const;
    unsigned GetMorphRangeCount(unsigned bufferIndex) const;

    tolua_property__get_set BoundingBox& boundingBox;
    tolua_readonly tolua_property__get_set Skeleton skeleton;
    tolua_property__get_set unsigned numGeometries;
    tolua_readonly tolua_property__get_set unsigned numMorphs;
};

${
#define TOLUA_DISABLE_tolua_GraphicsLuaAPI_Model_new00
static int tolua_GraphicsLuaAPI_Model_new00(lua_State* tolua_S)
{
    return ToluaNewObject<Model>(tolua_S);
}

#define TOLUA_DISABLE_tolua_GraphicsLuaAPI_Model_new00_local
static int tolua_GraphicsLuaAPI_Model_new00_local(lua_State* tolua_S)
{
    return ToluaNewObjectGC<Model>(tolua_S);
}

static Model* ModelClone(const Model* model, const String& cloneName = String::EMPTY)
{
    if (!model)
        return 0;

    return model->Clone(cloneName).Detach();
}
$}
